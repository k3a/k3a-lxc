# K3A.me LXC Docker Config
#
# Allows basic Docker support inside LXC
#
# - updated YMD: 2018/08/01

# [[-- Basic Config

lxc.include = /usr/share/lxc/config/k3a.common.conf



# [[-- Block and Character Devices
# (https://www.kernel.org/doc/Documentation/admin-guide/devices.txt)

# Docker requires these to implement virtual netrowk devices
lxc.cgroup.devices.allow = c 10:200 rwm	# /dev/net/tun (TAP/TUN network device)



# [[-- Capabilities

# interface configuration, firewall, masquerading, and accounting, modify routing tables
# bind to any address, clear driver statistics, set promiscuous mode, enabling multicasting
# > required for iptables (which Docker use); not required for tcpdump
lxc.cap.keep = net_admin

# use RAW and PACKET sockets, bind to any address 
# > required for ping, tcpdump and iptables (which Docker use)
lxc.cap.keep = net_raw

# bypass read, write and execute file permision checks (root normally has this cap)
# > Docker won't start without it
lxc.cap.keep = dac_override

# "Bypass permission checks on operations that normally require the file system UID of 
# the process to match the UID of the file (e.g., chmod(2), utime(2))"
# It also allows:
# - set extended file attributes (see chattr(1)) on arbitrary files,
# - set Access Control Lists (ACLs) on arbitrary files,
# - ignore directory sticky bit on file deletion and specify O_NOATIME for arbitrary files
#   in open(2) and fcntl(2)
# > RuntimeDirectory/RUNTIME_DIRECTORY for systemd units won't work without it
# > Docker container won't run without it
lxc.cap.keep = fowner

# additional requirements for running Docker containers
# - Write records to kernel auditing log
# - Create special files using mknod
# - Set file capabilities
# - Don't clear set-user-ID and set-group-ID permission bits when a file is modified and set 
#   the set-group-ID bit for a file whose GID does not match the file system 
#   or any of the supplementary GIDs of the calling process. 
# > Docker requires these (tested every combination)
lxc.cap.keep = audit_write mknod setfcap fsetid 

#
# - trace arbitrary processes using ptrace(2)
# - apply get_robust_list(2) to arbitrary processes
# - inspect processes using kcmp(2)
# > Docker requires it but only if using userns-remap - prestart hook won't success without it
#lxc.cap.keep = sys_ptrace

# NOTE: For reference, these are capabilities not allowed in k3a.common and this file:
# audit_control audit_read block_suspend dac_read_search ipc_lock ipc_owner lease 
# linux_immutable mac_admin mac_override net_broadcast sys_boot sys_module sys_nice 
# sys_pacct sys_rawio sys_time sys_tty_config syslog wake_alarm

# FIXME: allow all capabilitites (uncomment temporary for testing only)
#lxc.cap.drop =
#lxc.cap.keep =



# [[-- Auto-Mounts

# reset automounts first
lxc.mount.auto =

# "proc" and "sysfs" may need to be mounted rw for docker to work in 
# unprivileged userns-remap mode
#
#lxc.mount.auto = cgroup:mixed:force proc:rw sys:rw
# ..for normal mode, both "proc" and "sys" can be mounted "mixed" instead
lxc.mount.auto = cgroup:mixed:force proc:mixed sys:mixed

